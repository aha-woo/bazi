========================================
八字命理计算系统 - 快速使用指南
========================================

📦 项目已创建完成！包含：
✅ 完整的后端API服务（Python FastAPI）
✅ 八字计算核心算法
✅ MySQL数据库支持
✅ 前端测试页面
✅ 部署脚本和文档

========================================
一、快速测试（本地开发）
========================================

【Windows用户】

1. 安装数据库（MySQL 或 MariaDB，任选其一）
   - MySQL下载：https://dev.mysql.com/downloads/mysql/
   - 或使用已有的MariaDB服务（完全兼容）
   - 创建数据库：
     mysql -u root -p
     # 或使用 mariadb 命令
     CREATE DATABASE bazi_db CHARACTER SET utf8mb4;
     EXIT;

2. 启动后端服务
   双击运行：backend\start_dev.bat
   
   或手动运行：
   cd backend
   python -m venv venv
   venv\Scripts\activate
   pip install -r requirements.txt
   python -m uvicorn app.main:app --reload

3. 打开前端测试页面
   双击：frontend\index.html
   
4. 测试API
   浏览器访问：http://localhost:8000/docs
   在前端页面输入出生信息，点击"开始计算"


【Linux/Mac用户】

1. 安装数据库（MySQL 或使用现有的 MariaDB）
   Ubuntu: sudo apt install mysql-server
         # 或如果已有 MariaDB，直接使用即可
   Mac: brew install mysql
   
   创建数据库：
   sudo mysql    # 或 sudo mariadb
   CREATE DATABASE bazi_db CHARACTER SET utf8mb4;
   EXIT;
   
   💡 提示：如果已有 MariaDB 服务，部署脚本会自动检测并使用！

2. 启动后端服务
   cd backend
   chmod +x start_dev.sh
   ./start_dev.sh

3. 打开前端测试页面
   打开浏览器，访问文件：frontend/index.html
   
4. 测试API
   访问：http://localhost:8000/docs

========================================
二、API调用示例
========================================

【接口地址】
POST http://localhost:8000/api/v1/bazi/calculate

【请求示例】
{
  "year": 1990,
  "month": 5,
  "day": 15,
  "hour": 14,
  "minute": 30,
  "timezone": "Asia/Shanghai",
  "user_id": "test001"
}

【使用curl测试】
curl -X POST "http://localhost:8000/api/v1/bazi/calculate" \
  -H "Content-Type: application/json" \
  -d '{
    "year": 1990,
    "month": 5,
    "day": 15,
    "hour": 14,
    "minute": 30,
    "timezone": "Asia/Shanghai"
  }'

【JavaScript调用】
fetch('http://localhost:8000/api/v1/bazi/calculate', {
  method: 'POST',
  headers: {'Content-Type': 'application/json'},
  body: JSON.stringify({
    year: 1990,
    month: 5,
    day: 15,
    hour: 14,
    minute: 30,
    timezone: 'Asia/Shanghai'
  })
})
.then(res => res.json())
.then(data => console.log(data));

========================================
三、部署到Ubuntu VPS
========================================

【方法一：自动部署（推荐）】

1. 上传代码到服务器
   scp -r backend user@your-server-ip:/home/user/bazi-api

2. SSH登录服务器
   ssh user@your-server-ip

3. 运行部署脚本
   cd /home/user/bazi-api/backend
   chmod +x deploy.sh
   ./deploy.sh
   
   脚本会自动：
   - ✅ 检测现有的 MariaDB/MySQL 服务
   - ✅ 询问是否使用现有数据库（如有 MariaDB 选择 y）
   - ✅ 支持自定义数据库主机和端口
   - ✅ 自动创建数据库和用户
   - ✅ 完成所有配置

4. 访问API
   http://your-server-ip:8000
   http://your-server-ip:8000/docs

💡 MariaDB 用户：脚本会自动识别并使用您的 MariaDB！


【方法二：手动部署】

详细步骤请查看：backend/README.md

包括：
- 系统依赖安装
- MySQL配置
- 虚拟环境创建
- systemd服务配置
- Nginx反向代理
- SSL证书配置


【服务管理命令】

启动服务：  sudo systemctl start bazi-api
停止服务：  sudo systemctl stop bazi-api
重启服务：  sudo systemctl restart bazi-api
查看状态：  sudo systemctl status bazi-api
查看日志：  sudo journalctl -u bazi-api -f


【配置Nginx（可选）】

如需通过域名访问或配置HTTPS：

sudo nano /etc/nginx/sites-available/bazi-api

添加配置：
server {
    listen 80;
    server_name yourdomain.com;
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
    }
}

启用配置：
sudo ln -s /etc/nginx/sites-available/bazi-api /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl reload nginx

========================================
四、客户端集成
========================================

【Web前端】
直接使用fetch或axios调用API

【iOS应用】
使用URLSession或Alamofire

【Android应用】
使用Retrofit或OkHttp

【微信小程序】
使用wx.request()

【Flutter】
使用http包或dio

详细示例代码请查看：README.md 和 backend/README.md

========================================
五、重要文件说明
========================================

backend/
  ├── app/main.py              # FastAPI主应用入口
  ├── app/bazi_calculator.py   # 八字计算核心算法
  ├── requirements.txt         # Python依赖包
  ├── env.example             # 环境变量配置示例
  ├── deploy.sh               # Ubuntu自动部署脚本
  ├── start_dev.sh            # Linux开发启动脚本
  ├── start_dev.bat           # Windows开发启动脚本
  └── README.md               # 后端详细文档

frontend/
  ├── index.html              # 测试页面
  ├── app.js                  # 前端逻辑
  └── README.md               # 前端使用说明

README.md                     # 项目总文档
使用说明.txt                  # 本文件

========================================
六、配置数据库连接
========================================

1. 复制配置文件
   cd backend
   cp env.example .env

2. 编辑.env文件
   Windows: notepad .env
   Linux/Mac: nano .env

3. 修改数据库连接（重要！）
   DATABASE_URL=mysql+pymysql://用户名:密码@localhost:3306/bazi_db
   
   示例：
   DATABASE_URL=mysql+pymysql://root:123456@localhost:3306/bazi_db

========================================
七、API接口列表
========================================

【核心接口】
POST   /api/v1/bazi/calculate          # 计算八字
GET    /api/v1/bazi/record/{id}        # 查询记录
GET    /api/v1/bazi/user/{user_id}     # 查询用户记录
GET    /api/v1/bazi/records            # 查询所有记录
DELETE /api/v1/bazi/record/{id}        # 删除记录

【工具接口】
GET    /api/v1/timezones               # 获取时区列表
GET    /health                         # 健康检查
GET    /                               # API信息
GET    /docs                           # Swagger文档
GET    /redoc                          # ReDoc文档

========================================
八、测试检查清单
========================================

本地测试：
□ 后端服务启动成功（http://localhost:8000）
□ 数据库连接正常（无错误日志）
□ API文档可访问（http://localhost:8000/docs）
□ 前端页面可打开
□ 提交测试数据返回正确结果
□ 四柱计算正确（年月日时）
□ 五行分析正确
□ 命理解读显示正常

VPS部署：
□ 服务自动启动（systemctl status bazi-api）
□ 外网可访问（http://your-ip:8000）
□ 防火墙端口开放（8000）
□ Nginx配置正确（可选）
□ SSL证书配置（可选）

========================================
九、常见问题
========================================

Q1: 后端启动失败，提示"Can't connect to database"
A1: 检查MySQL是否运行，数据库是否创建，.env配置是否正确

Q2: 前端提示"无法连接到API"
A2: 确保后端服务已启动，检查API地址是否正确

Q3: 跨域错误（CORS error）
A3: 后端已配置CORS，如仍有问题，使用http-server运行前端

Q4: 八字计算结果与其他工具不同
A4: 不同工具算法可能有差异，注意时区设置

Q5: VPS部署后外网无法访问
A5: 检查防火墙（sudo ufw allow 8000），检查云服务商安全组

========================================
十、技术支持
========================================

【文档】
- 项目总览：README.md
- 后端文档：backend/README.md
- 前端文档：frontend/README.md
- API文档：http://localhost:8000/docs

【测试工具】
- Swagger UI：http://localhost:8000/docs
- ReDoc：http://localhost:8000/redoc
- Postman：导入API进行测试

【日志查看】
- 开发环境：直接在终端查看输出
- 生产环境：sudo journalctl -u bazi-api -f

========================================
十一、下一步开发建议
========================================

【功能扩展】
- 大运推算
- 流年分析
- 合婚配对
- 择日功能

【系统优化】
- 添加用户认证（JWT）
- 添加Redis缓存
- API访问频率限制
- 更精确的节气计算

【前端开发】
- 使用React/Vue/Angular重构
- 开发移动APP（React Native/Flutter）
- 开发小程序版本

【运维监控】
- 配置Prometheus监控
- 配置日志分析
- 自动化部署（CI/CD）

========================================

祝您使用愉快！

如有问题，请查看详细文档：
- README.md
- backend/README.md  
- frontend/README.md

或在线访问API文档：http://localhost:8000/docs

========================================

